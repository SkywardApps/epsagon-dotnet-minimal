# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: sns-sqs-dotnet
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"


custom:
  topicName: my-test-topic-1234
  QueueName: my-queue-for-test-4321


provider:
  name: aws
  runtime: dotnetcore3.1

  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:ListQueues"
      Resource:
        Fn::Join:
          - ":"
          - - "arn:aws:sqs"
            - ${self:provider.region}
            - Ref: AWS::AccountId
            - "*"
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource:
        - Ref: ExampleSNSTopic

  environment:
    EPSAGON_TOKEN: ${env:EPSAGON_TOKEN, ""}
    EPSAGON_APP_NAME: sns-sqs-dotnet
    TOPIC_NAME: ${self:custom.topicName}

package:
  individually: true

functions:
  sender:
    handler: CsharpHandlers::AwsDotnetCsharp.SNSSender::EpsagonEnabledSNSSender
    custom:
      env-resources:
        - ExampleSNSTopic
    package:
      artifact: bin/release/netcoreapp3.1/sender.zip

  receiver-sns:
    handler: CsharpHandlers::AwsDotnetCsharp.SNSReceiver::EpsagonEnabledSNSReceiver
    events:
      - sns:
          arn:
            Ref: ExampleSNSTopic
    package:
      artifact: bin/release/netcoreapp3.1/receiver_sns.zip

  receiver-sqs:
    handler: CsharpHandlers::AwsDotnetCsharp.SNSReceiver::EpsagonEnabledSQSReceiver
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ExampleTestQueue
              - Arn
          batchSize: 1
    package:
      artifact: bin/release/netcoreapp3.1/receiver_sqs.zip

resources:
  Resources:
    ExampleSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        BucketName: ${self:custom.topicName}

    ExampleTestQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.QueueName}

    snsToFirstQueueSqsPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "allow-sns-messages"
              Effect: Allow
              Principal: "*"
              Resource: !GetAtt
                - ExampleTestQueue
                - Arn
              Action: "SQS:SendMessage"
              Condition:
                ArnEquals:
                  "aws:SourceArn": !Ref ExampleSNSTopic
        Queues:
          - Ref: ExampleTestQueue

    firstQueueSubscription:
      Type: 'AWS::SNS::Subscription'
      Properties:
        TopicArn: !Ref ExampleSNSTopic
        Endpoint: !GetAtt
          - ExampleTestQueue
          - Arn
        Protocol: sqs
        RawMessageDelivery: 'true'

plugins:
  - serverless-resources-env
